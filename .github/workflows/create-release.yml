name: "Create Release"

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Docker Build"]
    types:
      - completed  

jobs:
  release:
    name: "Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Set Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get Latest Tag and Increment Version
        id: version
        run: |
          # Fetch all tags
          git fetch --tags

          # Get the latest tag, or default to 0.0.0 if no tags exist
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="0.0.0"
          fi
          echo "Latest tag: $LATEST_TAG"

          # Parse MAJOR, MINOR, PATCH components and increment PATCH
          IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_TAG"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))

          # Set new version
          NEW_TAG="$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git tag -a "$NEW_TAG" -m "Release version $NEW_TAG"
          git push origin "$NEW_TAG"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Create Release
        run: gh release create "$NEW_TAG" -t "Release $NEW_TAG" -n "Automatic release based on version $NEW_TAG"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          NEW_TAG: ${{ env.NEW_TAG }}
